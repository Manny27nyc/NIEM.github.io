Filler,OldRule,NewRule,Targets,Title,Text
x,10-45,10-46,"REF, EXT",Schema component names have only specific characters,"The name of an XML Schema component defined by the schema must be composed of only the characters uppercase 'A' through 'Z', lowercase 'a' through 'z', numbers '0' through '9', underscore, hyphen, and period."
x,10-46,10-47,"REF, EXT",Punctuation in component name is a separator,"The characters hyphen (-), underscore (_) MAY appear in a component name only when used as a separator between parts of a word, phrase, or value, which would otherwise be incomprehensible without the use of a separator. The period character (.) MAY appear in component names only when appearing as a separator (as above) or as a decimal within a numeric value. A punctuation character MUST NOT be used as a substitute for camel case in component names, or as a method to avoid camel case in component names."
x,10-47,10-48,"REF, EXT",Names use camel case,The name of any XML Schema component defined by the schema MUST use the camel case formatting convention.
x,10-48,10-49,"REF, EXT",Attribute name begins with lower case letter,"Within the schema, any attribute declaration MUST have a name that begins with a lowercase letter ('a'-'z')."
x,10-49,10-50,"REF, EXT",Name of schema component other than attribute and proxy type begins with upper case letter,"Within the schema, an XML Schema component that is not an attribute declaration or proxy type MUST have a name that begins with an upper-case letter ('A'-'Z')."
x,10-50,10-51,"REF, EXT",Names use common abbreviations,"The schema SHOULD use, in defined names, the abbreviations identified by Table 10-1, Abbreviations used in schema component names, rather than their full meanings."
x,10-51,10-52,"REF, EXT",Local term declaration is local to its schema document,An element appinfo:LocalTerm MUST establish the meaning of a local term only within the XML Schema document in which it occurs. There MUST NOT be any transitive inheritance of local terminology within schema documents that import the containing schema document.
x,10-52,10-53,"REF, EXT",Local terminology interpretation,An element information item appinfo:LocalTerm MUST establish a term as follows...
x,10-53,10-54,"REF, EXT",Singular form is preferred in name,A noun used as a term in the name of an XML Schema component MUST be in singular form unless the concept itself is plural.
x,10-54,10-55,"REF, EXT",Present tense is preferred in name,A verb used as a term in the name of an XML Schema component MUST be used in the present tense unless the concept itself is past tense.
x,10-55,10-56,"REF, EXT",Name does not have nonessential words,"Articles, conjunctions, and prepositions MUST NOT be used in NIEM component names except where they are required for clarity or by standard convention."
x,10-56,10-57,"REF, EXT",Element or attribute name follows pattern,"Except as specified elsewhere in this document, any element or attribute defined within the schema SHOULD have a name that takes the form..."
x,10-57,10-58,"REF, EXT",Object-class term identifies concrete category,The object-class term of a NIEM component MUST consist of a term identifying a category of concrete concepts or entities.
x,10-58,10-59,"REF, EXT",Property term describes characteristic or subpart,A property term MUST describe or represent a characteristic or subpart of an entity or concept.
x,10-59,10-60,"REF, EXT",Name may have multiple qualifier terms,Multiple qualifier terms MAY be used within a component name as necessary to ensure clarity and uniqueness within its namespace and usage context.
x,10-60,10-61,"REF, EXT",Name has minimum necessary number of qualifier terms,The number of qualifier terms SHOULD be limited to the absolute minimum required to make the component name unique and understandable.
x,10-61,10-62,"REF, EXT",Order of qualifiers is not significant,The order of qualifiers MUST NOT be used to differentiate names.
x,10-62,10-63,"REF, EXT",Redundant term in name is omitted,"If any word in the representation term is redundant with any word in the property term, one occurrence SHOULD be deleted."
x,10-63,10-64,"REF, EXT",Element with simple content has representation term,"Within the schema, the name of an element declaration that is of simple content SHOULD use an appropriate representation term as found in Table 10-2, Representation terms."
x,10-64,10-65,"REF, EXT",Element with complex content has representation term when appropriate,"Within the schema, the name of an element declaration that is of complex content, and that corresponds to a concept listed in Table 10-2, Representation terms, SHOULD use a representation term from that table."
x,10-65,10-66,"REF, EXT",Element with complex content has representation term only when appropriate,"Within the schema, the name of an element declaration that is of complex content and that does not correspond to a concept listed in Table 10-2, Representation terms SHOULD NOT use a representation term."
x,10-66,10-67,"REF, EXT",Machine-readable annotations are valid,"Every element information item or attribute information item that appears as a machine-readable annotation in a schema MUST be a valid instance, according to its specification."
x,10-67,10-68,"REF, EXT",Component marked as deprecated is deprecated component,A schema component that has an attribute appinfo:deprecated with a value of true MUST be a deprecated component.
x,10-68,10-69,"REF, EXT",Deprecated annotates schema component,The attribute appinfo:deprecated MUST be owned by an element with a namespace name http://www.w3.org/2001/XMLSchema.
x,10-69,10-70,"REF, EXT",External import indicator annotates import,The attribute appinfo:externalImportIndicator MUST be owned by an element xs:import.
x,10-70,10-71,"REF, EXT",External adapter type indicator annotates complex type,The attribute appinfo:externalAdapterTypeIndicator MUST be owned by an element xs:complexType.
x,10-71,10-72,"REF, EXT",appinfo:appliesToTypes annotates metadata element,The attribute appinfo:appliesToTypes MUST be owned by a metadata element.
x,10-72,10-73,SET,appinfo:appliesToTypes references types,Every item in @appinfo:appliesToTypes MUST resolve to a type.
x,10-73,10-74,"REF, EXT",appinfo:appliesToElements annotates metadata element,The attribute appinfo:appliesToElements MUST be owned by a metadata element.
x,10-74,10-75,SET,appinfo:appliesToElements references elements,Every item in @appinfo:appliesToElements MUST resolve to an element.
x,10-75,10-76,"REF, EXT",appinfo:LocalTerm annotates schema,The element appinfo:LocalTerm MUST be application information on an element xs:schema.
x,10-76,10-77,"REF, EXT",appinfo:LocalTerm has literal or definition,The element appinfo:LocalTerm MUST have a literal or definition.
x,10-77,10-78,"REF, EXT, INS, SET",Use structures consistent with specification,"Any schema or instance MUST use the NIEM structures namespace consistent with the schema as it is defined in Appendix B, Structures namespace, below."
x,11-2,11-3,"REF, EXT",Base type definition defined by conformant schema,The {base type definition} of a type definition MUST have the target namespace or the XML Schema namespace or a namespace that is imported as conformant.
x,11-3,11-4,"REF, EXT",Name of simple type ends in SimpleType,"A simple type definition schema component MUST have a name that ends in ""SimpleType""."
x,11-4,11-5,"REF, EXT",Use lists only when data is uniform,"Within the schema, a simple type definition that uses xs:list SHOULD NOT be defined if any member of the list requires a property or metadata that is different than other members of the list. All members of the list SHOULD have the same metadata, and should be related via the same properties."
x,11-5,11-6,"REF, EXT",List item type defined by conformant schemas,"The item type of a list simple type definition MUST have a target namespace equal to the target namespace of the XML Schema document within which it is defined, or a namespace that is imported as conformant by the schema document within which it is defined."
x,11-6,11-7,"REF, EXT",Union member types defined by conformant schemas,Every member type of a union simple type definition MUST have a target namespace that is equal to either the target namespace of the XML Schema document within which it is defined or a namespace that is imported as conformant by the schema document within which it is defined.
x,11-7,11-8,"REF, EXT",Name of a code simple type ends in CodeSimpleType,"A simple type definition schema component that has an enumeration facet or that is derived from a code simple type SHOULD have a name that ends in ""CodeSimpleType""."
x,11-8,11-9,"REF, EXT",Code simple type corresponds to a code list,A simple type SHOULD have a name ending in CodeSimpleType if and only if it has a correspondence to a list of distinct conceptual entities.
x,11-9,11-10,"REF, EXT",Attribute of code simple type has code representation term,"An attribute with a type that is a code simple type SHOULD have a name with representation term ""Code"
x,11-10,11-11,"REF, EXT",Complex type with simple content has structures:SimpleObjectAttributeGroup,A complex type definition with simple content schema component with a derivation method of extension that has a base type definition that is a simple type MUST incorporate the attribute group structures:SimpleObjectAttributeGroup.
x,11-11,11-12,"REF, EXT",Element type does not have a simple type name,The {type definition} of an element declaration MUST NOT have a {name} that ends in 'SimpleType'.
x,11-12,11-13,"REF, EXT",Element type is from conformant namespace,"The {type definition} of an element declaration MUST have a {target namespace} that is the target namespace, or one that is imported as conformant."
x,11-13,11-14,"REF, EXT",Name of element that ends in Abstract is abstract,"An element declaration SHOULD have a name that ends in 'Abstract', 'AugmentationPoint', or 'Representation' if and only if it has the {abstract} property with a value of ""true""."
x,11-14,11-15,"REF, EXT",Name of element declaration with simple content has representation term,The name of an element declaration that is of simple content SHOULD use a representation term.
x,11-15,11-16,SET,Name of element declaration with simple content has representation term,the name of an element declaration that is of simple content SHOULD use a representation term.
x,11-16,11-17,"REF, EXT",Element substitution group defined by conformant schema,An element substitution group MUST have either the target namespace or a namespace that is imported as conformant.
x,11-17,11-18,"REF, EXT",Attribute type defined by conformant schema,The type of an attribute declaration MUST have the target namespace or the XML Schema namespace or a namespace that is imported as conformant.
x,11-18,11-19,"REF, EXT",Attribute name uses representation term,An attribute name SHOULD end with a representation term.
x,11-19,11-20,"REF, EXT",Element or attribute declaration introduced only once into a type,"Within the schema, an element declaration or attribute declaration MUST NOT be introduced more than once into a type definition. This applies to content acquired by a type by any means, including from a base type definition, via element substitution groups, or through the use of attribute groups."
x,11-20,11-21,"REF, EXT",Element reference defined by conformant schema,"An element reference MUST be to a component that has a namespace that is either the target namespace of the schema document in which it appears, or which is imported as conformant by that schema document."
x,11-21,11-22,"REF, EXT",Referenced attribute defined by conformant schemas,An attribute {}ref MUST have the target namespace or a namespace that is imported as conformant.
x,11-22,11-23,"REF, EXT",Schema uses only known attribute groups,An attribute group reference MUST be structures:SimpleObjectAttributeGroup or have the IC-ISM or IC-NTK namespace.
x,11-23,11-24,"REF, EXT",Data definition does not introduce ambiguity,"Words or synonyms for the words within a data definition MUST NOT be reused as terms in the corresponding component name if those words dilute the semantics and understanding of, or impart ambiguity to, the entity or concept that the component represents."
x,11-24,11-25,"REF, EXT",Object class has only one meaning,"An object class MUST have one and only one associated semantic meaning (i.e., a single word sense) as described in the definition of the component that represents that object class."
x,11-25,11-26,"REF, EXT",Data definition of a part does not redefine the whole,An object class MUST NOT be redefined within the definitions of the components that represent properties or subparts of that entity or class.
x,11-26,11-27,"REF, EXT",Do not leak representation into data definition,"A data definition SHOULD NOT contain explicit representational or data typing information such as number of characters, classes of characters, range of mathematical values, etc., unless the very nature of the component can be described only by such information."
x,11-27,11-28,"REF, EXT",Data definition follows 11179-4 requirements,"Each data definition MUST conform to the requirements for data definitions provided by [ISO 11179-4] Section 5.2, Requirements."
x,11-28,11-29,"REF, EXT",Data definition follows 11179-4 recommendations,"Each data definition SHOULD conform to the recommendations for data definitions provided by [ISO 11179-4] Section 5.3, Recommendations."
x,11-29,11-31,"REF, EXT",Standard opening phrase for augmentation point element data definition,"The data definition for an augmentation point element SHOULD begin with standard opening phrase ""An augmentation point...""."
x,11-30,11-32,"REF, EXT",Standard opening phrase for augmentation element data definition,"The data definition for an augmentation element SHOULD begin with the standard opening phrase ""Supplements..."" or ""Additional information about...""."
x,11-31,11-33,"REF, EXT",Standard opening phrase for metadata element data definition,"The data definition for a metadata element SHOULD begin with the standard opening phrase ""Metadata about..."" or ""Information that further qualifies...""."
x,11-32,11-34,"REF, EXT",Standard opening phrase for association element data definition,"The data definition for an association element that is not abstract SHOULD begin with the standard opening phrase ""An (optional adjectives) (relationship|association)...""."
x,11-33,11-35,"REF, EXT",Standard opening phrase for abstract element data definition,"The data definition for an abstract element SHOULD begin with the standard opening phrase ""A data concept...""."
x,11-34,11-36,"REF, EXT",Standard opening phrase for date element or attribute data definition,"The data definition for an element or attribute with a date representation term SHOULD begin with the standard opening phrase ""(A|An) (optional adjectives) (date|month|year)...""."
x,11-35,11-37,"REF, EXT",Standard opening phrase for quantity element or attribute data definition,"The data definition for an element or attribute with a quantity representation term SHOULD begin with the standard opening phrase ""An (optional adjectives) (count|number)...""."
x,11-36,11-38,"REF, EXT",Standard opening phrase for picture element or attribute data definition,"The data definition for an element or attribute with a picture representation term SHOULD begin with the standard opening phrase ""An (optional adjectives) (image|picture|photograph)""."
x,11-37,11-39,"REF, EXT",Standard opening phrase for indicator element or attribute data definition,"The data definition for an element or attribute with an indicator representation term SHOULD begin with the standard opening phrase ""True if ...; false (otherwise|if)...""."
x,11-38,11-40,"REF, EXT",Standard opening phrase for identification element or attribute data definition,"The data definition for an element or attribute with an identification representation term SHOULD begin with the standard opening phrase ""(A|An) (optional adjectives) identification...""."
x,11-39,11-41,"REF, EXT",Standard opening phrase for name element or attribute data definition,"The data definition for an element or attribute with a name representation term SHOULD begin with the standard opening phrase ""(A|An) (optional adjectives) name...""."
x,11-40,11-42,"REF, EXT",Standard opening phrase for element or attribute data definition,"The data definition for an element or attribute declaration SHOULD begin with the standard opening phrase ""(A|An)""."
x,11-41,11-43,"REF, EXT",Standard opening phrase for association type data definition,"The data definition for an association type SHOULD begin with the standard opening phrase ""A data type for (a relationship|an association)...\."
x,11-42,11-44,"REF, EXT",Standard opening phrase for augmentation type data definition,"The data definition for an augmentation type SHOULD begin with the standard opening phrase ""A data type (that supplements|for additional information about)...""."
x,11-43,11-45,"REF, EXT",Standard opening phrase for metadata type data definition,"The data definition for a metadata type SHOULD begin with the standard opening phrase ""A data type for (metadata about|information that further qualifies)...""."
x,11-44,11-46,"REF, EXT",Standard opening phrase for complex type data definition,"The data definition for a complex type SHOULD begin with the standard opening phrase ""A data type...""."
x,11-45,11-47,"REF, EXT",Standard opening phrase for simple type data definition,"The data definition for a simple type SHOULD begin with a standard opening phrase ""A data type...""."
x,11-46,11-48,"REF, EXT",Same namespace means same components,"Two XML Schema documents MUST have the same value for attribute targetNamespace carried by the element xs:schema, if and only if they represent the same set of components."
x,11-47,11-49,"REF, EXT",Different version means different view,"Two XML Schema documents MUST have the same value for attribute targetNamespace carried by the element xs:schema, and different values for attribute version carried by the element xs:schema if and only if they are profiles of the same set of components."
x,11-48,11-50,SET,Reference schema document imports reference schema document,A namespace imported as conformant from a reference schema document MUST identify a namespace defined by a reference schema document.
x,11-49,11-51,SET,Extension schema document imports reference or extension schema document,A namespace imported as conformant from an extension schema document MUST identify a namespace defined by a reference schema document or an extension schema document.
x,11-50,11-52,"REF, EXT",Structures imported as conformant,An import of the structures namespace MUST NOT be labeled as an external import.
x,11-51,11-53,"REF, EXT",XML namespace imported as conformant,An import of the XML namespace MUST NOT be labeled as an external import.
x,11-52,11-54,SET,Each namespace may have only a single root schema in a schema set,A namespace may appear as a root schema in a schema set only once.
x,11-53,11-55,"REF, EXT",Consistently marked namespace imports,All xs:import elements that have the same namespace MUST have the same conformance marking via appinfo:externalImportIndicator.
x,12-10,12-11,INS,Metadata applies to referring entity,"Within an element instance, when an object $O links to a metadata object via an attribute structures:metadata, the information in the metadata object MUST be applied to the object $O."
x,12-11,12-12,INS,Referent of structures:relationshipMetadata annotates relationship,"Within an element instance, when an object $O1 contains an element $E, with content object $O2 or with a reference to object $O2, and $O2 links to a metadata object via an attribute structures:relationshipMetadata, the information in the metadata object MUST be applied to the relationship $E between $O1 and $O2."
x,12-12,12-13,INS,Values of structures:metadata refer to values of structures:id,"Given that each IDREF in the value of an attribute structures:metadata must match the value of an ID attribute on some element in the XML document, that ID attribute MUST be an occurrence of the attribute structures:id."
x,12-13,12-14,INS,Values of structures:relationshipMetadata refer to values of structures:id,"Given that each IDREF in the value of an attribute structures:relationshipMetadata must match the value of an ID attribute on some element in the XML document, that ID attribute MUST be an occurrence of the attribute structures:id."
x,12-14,12-15,INS,structures:metadata and structures:relationshipMetadata refer to metadata elements,Each element referenced by an attribute structures:metadata or an attribute structures:relationshipMetadata MUST have [element declaration] that is a metadata element declaration.
x,12-15,12-16,INS,Attribute structures:metadata references metadata element,Each item in the value of an attribute structures:metadata MUST appear as the value of an attribute structures:id with an owner element that is a metadata element.
x,12-16,12-17,INS,Attribute structures:relationshipMetadata references metadata element,Each item in the value of an attribute structures:relationshipMetadata MUST appear as the value of an attribute structures:id with an owner element that is a metadata element.
x,12-17,12-18,INS,Metadata is applicable to element,"Given that an element $SUBJECT-ELEMENT uses a metadata element $METADATA-ELEMENT through a value in either an attribute structures:metadata or an attribute structures:relationshipMetadata, the element $SUBJECT-ELEMENT MUST be an applicable element for $METADATA-ELEMENT."
